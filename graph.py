no_update = ['11.26', '11.23', '10.00', '13.81', '17.28', '15.81', '16.82', '17.46', '20.18', '21.63', '22.65', '22.77', '24.17', '24.98', '24.29', '25.18', '25.89', '26.05', '26.06', '27.00', '30.44', '30.84', '32.16', '32.32', '34.13', '36.07', '37.06', '36.30', '37.17', '37.65', '37.29', '39.80', '38.24', '39.42', '39.15', '39.69', '40.76', '40.09', '42.37', '44.97', '45.67', '46.41', '48.06', '48.09', '48.93', '49.40', '50.54', '50.56', '51.29', '52.31', '53.24', '54.00', '54.35', '54.08', '55.55', '54.25', '54.88', '55.14', '56.09', '56.55', '56.72', '57.87', '55.51', '58.72', '58.87', '60.12', '60.24', '60.18', '60.78', '61.55', '60.03', '59.48', '59.41', '61.43', '61.71', '62.46', '62.68', '62.82', '63.32', '64.16', '63.09', '64.96', '63.34', '62.70', '65.29', '66.18', '65.31', '65.44', '67.10', '66.22', '66.86', '66.68', '67.10', '67.52', '67.88', '67.44', '68.00', '68.47', '68.23', '68.82']
original_image = ['10.25', '10.61', '12.60', '15.14', '22.15', '25.76', '31.00', '34.85', '41.69', '43.59', '45.59', '49.21', '51.58', '52.38', '54.07', '55.44', '56.02', '57.83', '59.01', '59.15', '60.26', '61.45', '62.34', '62.36', '62.19', '64.51', '65.04', '64.87', '65.48', '65.38', '66.69', '66.42', '66.21', '67.35', '67.60', '67.56', '67.95', '68.65', '68.17', '67.04', '69.29', '68.81', '69.43', '69.30', '70.10', '70.25', '70.02', '70.52', '70.44', '70.68', '70.51', '71.15', '70.87', '71.24', '71.22', '71.57', '72.33', '71.82', '71.29', '72.07', '72.16', '73.29', '71.04', '72.79', '72.87', '73.11', '73.45', '73.63', '73.18', '73.40', '73.17', '74.02', '73.78', '73.63', '73.53', '73.58', '73.97', '73.80', '74.46', '74.01', '74.61', '74.58', '74.09', '75.47', '74.86', '74.56', '75.00', '74.49', '75.54', '75.23', '75.18', '75.40', '75.00', '75.55', '75.61', '75.48', '75.63', '75.26', '75.79', '75.37']
our_proposed = ['10.97', '11.39', '17.36', '21.94', '27.98', '31.09', '34.61', '38.39', '41.38', '46.22', '49.76', '50.80', '52.46', '54.12', '55.64', '56.72', '57.75', '58.16', '59.35', '59.98', '60.98', '60.45', '62.43', '62.04', '62.24', '63.04', '62.11', '64.44', '64.80', '65.45', '65.24', '64.50', '65.85', '66.73', '65.67', '65.50', '66.67', '67.32', '67.45', '68.04', '67.08', '67.61', '68.09', '67.83', '68.66', '69.26', '69.00', '69.76', '70.06', '69.64', '69.85', '70.40', '70.23', '70.56', '70.69', '70.68', '70.93', '70.37', '71.38', '71.03', '71.06', '71.81', '70.75', '71.40', '72.23', '72.20', '72.49', '72.38', '72.44', '72.45', '71.32', '72.12', '72.75', '72.84', '72.95', '72.92', '73.11', '72.90', '73.24', '73.33', '73.12', '72.83', '73.08', '73.43', '73.78', '74.31', '73.85', '73.12', '74.46', '74.44', '73.98', '74.24', '74.47', '74.49', '74.16', '72.95', '74.52', '74.12', '75.03', '74.19']
local_train = ['12.22', '9.58', '32.74', '43.16', '37.05', '50.96', '56.51', '55.55', '53.31', '60.51', '59.22', '64.00', '67.30', '66.68', '66.67', '70.83', '68.85', '71.95', '72.20', '71.75', '74.01', '71.21', '68.26', '73.47', '74.75', '72.77', '74.84', '74.58', '19.07', '75.74', '75.14', '74.10', '74.61', '72.51', '72.33', '75.66', '69.20', '74.86', '10.00', '19.42', '27.33', '34.72', '35.74', '35.21', '36.91', '32.78', '19.67', '27.42', '20.70', '17.46', '17.81', '18.32', '10.00', '24.15', '17.75', '26.32', '26.99', '32.84', '27.35', '26.06', '17.96', '35.68', '20.06', '18.64', '35.36', '27.05', '27.50', '26.97', '35.59', '30.74', '26.80', '27.65', '10.00', '10.02', '17.73', '18.21', '30.61', '27.89', '10.00', '19.23', '27.25', '18.10', '29.76', '18.20', '26.78', '27.08', '18.29', '18.51', '18.48', '19.25', '34.80', '10.00', '19.17', '18.48', '27.05', '27.59', '18.81', '21.76', '18.69', '10.00']
encrypted_image = ['9.81', '10.12', '9.92', '9.98', '9.76', '9.73', '10.19', '10.01', '10.00', '10.58', '10.21', '10.44', '10.28', '10.46', '9.91', '10.11', '10.04', '10.06', '10.74', '10.59', '10.21', '10.47', '10.73', '10.26', '10.88', '9.93', '9.97', '10.29', '10.61', '9.45', '10.05', '10.64', '10.46', '10.36', '10.66', '10.48', '10.59', '10.75', '10.73', '10.79', '10.74', '10.88', '10.68', '10.48', '10.94', '11.16', '10.56', '10.91', '10.27', '10.48', '10.58', '10.79', '10.47', '11.11', '10.42', '10.66', '10.40', '10.65', '10.36', '11.32', '10.75', '10.79', '11.14', '10.45', '10.89', '11.18', '10.67', '10.65', '11.03', '10.71', '11.58', '10.95', '10.79', '11.48', '10.62', '10.46', '10.67', '10.95', '10.97', '10.89', '11.27', '10.56', '10.63', '10.46', '10.94', '10.46', '10.21', '10.78', '10.97', '11.37', '10.81', '10.79', '10.98', '10.46', '10.49', '10.23', '10.88', '10.62', '10.42', '10.70']

import matplotlib.pyplot as plt
import numpy as np

epochs = np.arange(1, 101)

# Convert the strings to floats for plotting
original_image = list(map(float, original_image))
encrypted_image = list(map(float, encrypted_image))
our_proposed = list(map(float, our_proposed))
local_train = list(map(float, local_train))
no_update = list(map(float, no_update))

# Plotting the data
plt.figure(figsize=(15, 8))
plt.plot(epochs, original_image, 'g-^', label='original image', markersize=5)
# plt.plot(epochs, encrypted_image, 'y-^', label='encrypted image', markersize=5)
plt.plot(epochs, our_proposed, 'r-o', label='our proposed', markersize=5)
# plt.plot(epochs, local_train, 'b-s', label='local train', markersize=5)
plt.plot(epochs, no_update, 'o-', color='peachpuff', label='no update', markersize=5)

# Adding labels and title
plt.xlabel('Epoch')
plt.ylabel('Test Accuracy (%)')
plt.title('Test Accuracy over Epochs')

# Adding a grid
plt.grid(True)

# Setting y-axis limit
plt.ylim(0, 80)

# Adding ticks for better readability
plt.xticks(np.arange(0, 101, 10))
plt.yticks(np.arange(0, 81, 5))

# Adding a legend
plt.legend(fontsize=30)

# Display the plot
plt.savefig("Test_Accuracy_over_Epochs.pdf")