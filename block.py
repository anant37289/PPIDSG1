block_8 = ['10.28', '11.28', '15.46', '20.81', '23.68', '28.62', '35.60', '38.20', '36.95', '43.46', '46.57', '50.19', '52.66', '53.32', '54.59', '56.47', '57.22', '59.75', '60.45', '59.64', '60.14', '61.85', '61.09', '62.77', '63.07', '64.56', '64.01', '64.07', '65.75', '65.47', '65.08', '65.46', '66.51', '66.49', '66.60', '66.57', '67.13', '67.16', '67.93', '68.47', '67.57', '67.82', '68.30', '68.60', '68.92', '68.84', '69.37', '69.89', '69.99', '70.36', '70.57', '70.53', '70.63', '70.41', '70.75', '71.79', '71.24', '71.68', '71.98', '71.69', '71.43', '71.72', '71.41', '72.21', '72.29', '73.21', '71.83', '72.68', '73.11', '72.68', '72.79', '72.81', '72.93', '73.13', '73.03', '73.03', '73.18', '73.88', '73.01', '73.48', '74.50', '73.25', '73.71', '74.02', '73.51', '74.64', '74.42', '74.08', '74.14', '74.21', '74.34', '74.80', '74.72', '74.35', '73.81', '74.38', '75.05', '74.35', '74.71', '75.01']
block_4 = ['10.35', '10.47', '10.85', '14.67', '27.24', '33.59', '38.90', '42.65', '44.96', '46.88', '47.55', '50.57', '52.55', '53.65', '54.63', '56.29', '55.66', '55.03', '58.02', '58.61', '59.80', '60.12', '60.99', '62.07', '62.60', '63.20', '63.44', '63.33', '65.00', '65.05', '65.37', '65.32', '65.77', '65.23', '66.18', '66.22', '67.42', '67.75', '67.65', '67.17', '67.84', '67.34', '68.65', '68.86', '69.53', '69.07', '69.26', '69.10', '68.61', '69.74', '70.35', '70.48', '71.10', '70.83', '70.37', '71.11', '70.74', '71.22', '70.59', '71.54', '71.46', '71.95', '71.39', '72.02', '71.98', '72.19', '72.06', '71.73', '72.28', '72.56', '73.29', '72.40', '72.64', '73.12', '73.30', '73.19', '73.58', '73.44', '73.22', '73.30', '74.12', '73.84', '73.43', '74.14', '73.97', '73.59', '74.11', '74.18', '74.43', '74.30', '75.02', '74.10', '74.70', '74.65', '74.89', '74.91', '74.59', '75.14', '74.45', '75.11']
block_2 = ['10.78', '12.07', '16.24', '17.46', '26.37', '30.15', '32.52', '37.43', '42.11', '43.32', '43.96', '46.08', '48.38', '48.43', '49.91', '51.90', '53.31', '53.78', '54.99', '55.18', '56.91', '57.97', '58.39', '60.24', '60.39', '58.57', '60.08', '60.31', '61.45', '62.32', '62.96', '63.83', '62.27', '64.67', '65.45', '65.88', '65.77', '66.43', '66.61', '66.70', '66.44', '67.12', '67.78', '67.91', '67.27', '68.27', '67.45', '69.16', '68.79', '69.02', '69.08', '68.90', '69.02', '68.71', '69.97', '69.63', '69.56', '69.71', '70.11', '69.99', '71.33', '70.44', '70.75', '70.46', '70.17', '71.23', '70.94', '71.03', '71.16', '70.65', '71.45', '71.43', '71.06', '71.15', '71.59', '71.81', '71.56', '71.80', '72.15', '72.05', '71.68', '72.78', '72.34', '72.77', '73.41', '71.55', '73.51', '72.76', '72.55', '73.33', '73.35', '72.76', '73.28', '72.61', '72.76', '73.82', '73.67', '73.43', '73.87', '74.41']

import matplotlib.pyplot as plt
import numpy as np

epochs = np.arange(1, 101)

# Convert the strings to floats for plotting
block_8 = list(map(float, block_8))
block_4 = list(map(float, block_4))
block_2 = list(map(float, block_2))

# Plotting the data
plt.figure(figsize=(15, 8))
plt.plot(epochs, block_8, 'g-^', label='block_size=8', markersize=5)
plt.plot(epochs, block_4, 'r-o', label='block_size=4', markersize=5)
plt.plot(epochs, block_2, 'o-', label='block_size=2', markersize=5)

# Adding labels and title
plt.xlabel('Epoch', fontsize=25)
plt.ylabel('Test Accuracy (%)', fontsize=25)

# Adding a grid (only major grid lines)
plt.grid(which='major', axis='both', linestyle='-')

# Setting y-axis limit
plt.ylim(0, 80)

# Adding ticks for better readability
plt.xticks(np.arange(0, 101, 10), fontsize=20)
plt.yticks(np.arange(0, 81, 10), fontsize=20)

# Customizing the spines to remove the top horizontal line
ax = plt.gca()
ax.spines['top'].set_visible(False)

# Adding a legend
plt.legend(fontsize=30)

# Display the plot
plt.savefig("Block_size_over_epochs.pdf")

